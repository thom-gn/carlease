openapi: 3.0.1
info:
  title: Car Lease API
  description: API for managing cars, customers, and car leases.
  version: 1.0.0
servers:
  - url: http://localhost:8080/myapp
    description: Local development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Car:
      type: object
      properties:
        make:
          type: string
        model:
          type: string
        version:
          type: string
        numberOfDoors:
          type: integer
        co2Emission:
          type: number
        grossPrice:
          type: number
        nettPrice:
          type: number
    Customer:
      type: object
      properties:
        name:
          type: string
        street:
          type: string
        houseNumber:
          type: string
        zipCode:
          type: string
        place:
          type: string
        emailAddress:
          type: string
        phoneNumber:
          type: string
    CarLease:
      type: object
      properties:
        customerId:
          type: integer
        carId:
          type: integer
        mileage:
          type: integer
        duration:
          type: integer
        interestRate:
          type: number
paths:
  /api/cars:
    get:
      summary: Get all cars
      operationId: getCars
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of cars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
  /api/cars/{id}:
    get:
      summary: Get car by ID
      operationId: getCarById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Car details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
    put:
      summary: Update car by ID
      operationId: updateCar
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Updated car
  /api/cars/add:
    post:
      summary: Add new car
      operationId: addCar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Car created
  /api/cars/delete/{id}:
    delete:
      summary: Delete car by ID
      operationId: deleteCar
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Car deleted
  /api/customers:
    get:
      summary: Get all customers
      operationId: getCustomers
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
  /api/customers/{id}:
    get:
      summary: Get customer by ID
      operationId: getCustomerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Customer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    put:
      summary: Update customer by ID
      operationId: updateCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Updated customer
  /api/customers/add:
    post:
      summary: Add new customer
      operationId: addCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Customer created
  /api/customers/delete/{id}:
    delete:
      summary: Delete customer by ID
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Customer deleted
  /api/carleases:
    get:
      summary: Get all car leases
      operationId: getCarLeases
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of car leases
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarLease'
  /api/carleases/{id}:
    get:
      summary: Get car lease by ID
      operationId: getCarLeaseById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Car lease details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarLease'
    put:
      summary: Update car lease by ID
      operationId: updateCarLease
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarLease'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Updated car lease
  /api/carleases/add:
    post:
      summary: Add new car lease
      operationId: addCarLease
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarLease'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Car lease created
  /api/carleases/delete/{id}:
    delete:
      summary: Delete car lease by ID
      operationId: deleteCarLease
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Car lease deleted
